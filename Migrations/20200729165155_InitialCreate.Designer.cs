// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Polymorphic.Data;

namespace Polymorphic.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200729165155_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("Polymorphic.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Polymorphic.Models.ArticleComment", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId", "ArticleId")
                        .HasName("PK_dbo.ArticleComments");

                    b.HasIndex("ArticleId")
                        .HasName("IX_ArticleId");

                    b.HasIndex("CommentId")
                        .HasName("IX_ArticleCommentId");

                    b.ToTable("ArticleComments");
                });

            modelBuilder.Entity("Polymorphic.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommentText")
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Polymorphic.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("End")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Polymorphic.Models.EventComment", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId", "EventId")
                        .HasName("PK_dbo.EventComments");

                    b.HasIndex("CommentId")
                        .HasName("IX_EventCommentId");

                    b.HasIndex("EventId")
                        .HasName("IX_EventId");

                    b.ToTable("EventComments");
                });

            modelBuilder.Entity("Polymorphic.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Polymorphic.Models.VideoComment", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId", "VideoId")
                        .HasName("PK_dbo.VideoComments");

                    b.HasIndex("CommentId")
                        .HasName("IX_VideoCommentId");

                    b.HasIndex("VideoId")
                        .HasName("IX_VideoId");

                    b.ToTable("VideoComments");
                });

            modelBuilder.Entity("Polymorphic.Models.ArticleComment", b =>
                {
                    b.HasOne("Polymorphic.Models.Article", "Article")
                        .WithMany("ArticleComments")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK_dbo.ArticleComments_dbo.Articles_ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Polymorphic.Models.Comment", "Comment")
                        .WithMany("ArticleComments")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("FK_dbo.ArticleComments_dbo.Comments_CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Polymorphic.Models.EventComment", b =>
                {
                    b.HasOne("Polymorphic.Models.Comment", "Comment")
                        .WithMany("EventComments")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("FK_dbo.EventComments_dbo.Comments_CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Polymorphic.Models.Event", "Event")
                        .WithMany("EventComments")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_dbo.EventComments_dbo.Events_EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Polymorphic.Models.VideoComment", b =>
                {
                    b.HasOne("Polymorphic.Models.Comment", "Comment")
                        .WithMany("VideoComments")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("FK_dbo.VideoComments_dbo.Comments_CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Polymorphic.Models.Video", "Video")
                        .WithMany("VideoComments")
                        .HasForeignKey("VideoId")
                        .HasConstraintName("FK_dbo.VideoComments_dbo.Videos_VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
